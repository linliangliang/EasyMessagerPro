apply plugin: 'com.android.library'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'

    compileOnly 'com.android.support:appcompat-v7:26.1.0'
    compileOnly 'org.jbundle.util.osgi.wrapped:org.jbundle.util.osgi.wrapped.org.apache.http.client:4.1.2'
    compileOnly 'com.squareup.okhttp3:okhttp:3.8.0'
    compileOnly 'org.greenrobot:eventbus:3.0.0'
//
//    compile files('libs/sun.misc.BASE64Decoder.jar')
    compileOnly 'com.google.code.gson:gson:2.8.1'
}

task makeJar(type: Jar, dependsOn: ['build']) {
    println('begin makeJar task')
    destinationDir = file('build/outputs/jar/')
    baseName = 'baselib'
    // version = '1.1.1'
    from('build/intermediates/classes/debug')
    exclude('**/BuildConfig.class')
    exclude('**/R.class')
    exclude('**/BuildConfig\$*.class')
    exclude('**R\$*.class')
    include('**/*.class')
}

task copyLib(dependsOn: makeJar) {
    doLast {
        println('begin copyLib task')

        for (name in rootProject.ext.pluginNames) {
            println('begin copy task : ' + name)
            copy {
                from(rootProject.ext.libFromPath)
                into(rootProject.ext.lib2PathPre + name + rootProject.ext.lib2PathAf)
            }
        }
    }
}
